{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","response","wrap","_context2","prev","next","jsonPlaceholder","get","sent","type","payload","data","stop","_x3","apply","this","arguments","fetchUser","id","_ref3","_callee3","_context3","concat","_x4","UserHeader","user","props","react_default","createElement","className","name","React","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUser","posts","map","post","key","title","body","components_UserHeader","renderList","_ref","_callee","getState","_context","_","chain","uniq","forEach","value","_x","_x2","App","components_PostList","combineReducers","length","undefined","action","toConsumableArray","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.9d9e8fbb.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com'\r\n\r\n\r\n    // for offline \r\n    // baseURL: 'http://localhost:3000'\r\n})","import jsonPlaceholder from '../apis/jsonPlaceholder';\r\nimport _ from 'lodash';\r\n\r\nexport const fetchPostsAndUser = () => async (dispatch, getState) => {\r\n    await dispatch(fetchPosts());\r\n\r\n    // const userIds = _.uniq(_.map(getState().posts, 'userId'));\r\n    // userIds.forEach(userId => dispatch(fetchUser(userId)));\r\n    //   ||\r\n    // with lodash\r\n    _.chain(getState().posts)\r\n        .map('userId')\r\n        .uniq()\r\n        .forEach(id => dispatch(fetchUser(id)))\r\n        .value();\r\n}\r\n\r\nexport const fetchPosts = () => async (dispatch) => {\r\n    const response = await jsonPlaceholder.get('/posts');\r\n\r\n    dispatch({ type: \"FETCH_POSTS\", payload: response.data })\r\n};\r\n\r\nexport const fetchUser = (id) => async (dispatch) => {\r\n    const response = await jsonPlaceholder.get(`/users/${id}`);\r\n\r\n    dispatch({ type: 'FETCH_USERS', payload: response.data })\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UserHeader extends React.Component {\r\n\r\n    render() {\r\n\r\n        const { user } = this.props;\r\n\r\n        if (!user) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className=\"header\">{user.name}</div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { user: state.users.find(user => user.id === ownProps.userId) }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserHeader);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPostsAndUser } from '../actions';\r\nimport UserHeader from './UserHeader';\r\n\r\nclass PostList extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchPostsAndUser();\r\n    }\r\n\r\n    renderList() {\r\n        return this.props.posts.map(post => {\r\n            return (\r\n                <div className=\"item\" key={post.id}>\r\n                    <i className=\"large middle aligned icon user\" />\r\n                    <div className=\"content\">\r\n                        <div className=\"desciption\">\r\n                            <h2>{post.title}</h2>\r\n                            <p>{post.body}</p>\r\n                        </div>\r\n                        <UserHeader userId={post.userId} />\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui relaxed divided list\">\r\n                {this.renderList()}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { posts: state.posts }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    fetchPostsAndUser\r\n})(PostList);","import React from 'react';\r\nimport PostList from './PostList'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <PostList />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport postsReducer from './postsReducer';\r\nimport usersReducer from './usersReducer';\r\n\r\nexport default combineReducers({\r\n    posts: postsReducer,\r\n    users: usersReducer\r\n});","export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_POSTS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_USERS':\r\n            return [...state, action.payload];\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}